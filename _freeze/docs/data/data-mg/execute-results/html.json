{
  "hash": "d7d7304ced180b6d5e610747e8b48f52",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Data & Scripts\"\nlisting: \n  id: mg-listing\n  contents: listings/data-mg.yml\nmetadata-files: \n  - listings/_metadata.yml\n---\n\n\n::: column-body-outset-right\n\n::: {.cell}\n\n:::\n\n\n\n\nQuick access to pipeline processing scripts and raw data. With these scripts and associated data you can run the processing steps for each analysis. \n\nAll sequence data is linked to projects on the [European Nucleotide Archive (ENA)](https://www.ebi.ac.uk/ena/browser/). The scripts and associated files can be downloaded as `.zip` archives by clicking the links. Or if you prefer, you can copy the scripts directly from the code blocks below.  \n\n:::\n\n::: column-page-inset-right\n\n```{=html}\n\n<style type=\"text/css\">\n.nav-tabs {\n  margin-top: 0.5rem;\n  border-bottom: none;\n}\n\n.callout {\n  margin-top: 0;\n}\n\n.nav-tabs .nav-link {\n  text-align: center;\n  margin-right: 15px;\n  margin-top: 10px;\n  width: 147px;\n  font-size: 0.9em;\n  font-weight: 600;\n}\n\n.nav-tabs .nav-link, \n.nav-tabs .nav-link.active, \n.nav-tabs .nav-item.show .nav-link {\n  border: 1px solid  rgb(222, 226, 230);\n  border-radius: 10px;\n  color: rgb(80,146,221);\n}\n.nav-tabs .nav-link:hover {\n   border-color: rgb(80,146,221);\n   border-width: 1px;\n} \n\n.nav-tabs .nav-link.active, \n.nav-tabs .nav-item.show .nav-link {\n  border-color: rgb(80,146,221);\n  border-width: 2px;\n}\n\n.nav-tabs .nav-link i {\n  display: block;\n  font-size: 3rem;\n  color: rgb(80,146,221);\n  margin-bottom: 5px;\n}\n\n.quarto-listing {\n  margin-top: 2em;\n}\n\n.quarto-listing .listing-name,\n.quarto-listing .listing-author {\n  white-space: nowrap;\n}\n\n.quarto-listing .listing-actions-group h3 {\n  margin-top: 0;\n}\n\n \n</style>\n\n<ul id=\"index-chooser\" class=\"nav nav-tabs\" role=\"tablist\">\n  <li class=\"nav-item\" role=\"presentation\">\n    <a class=\"nav-link\" href=\"data-asv.html\">\n      <i class=\"bi bi-database-fill\"></i>\n      16S rRNA ASV processing\n    </a>\n  </li>\n  <li class=\"nav-item\" role=\"presentation\">\n    <a class=\"nav-link\" href=\"data-otu.html\">\n      <i class=\"bi bi-database-fill\"></i>\n      16S rRNA OTU processing\n    </a>\n  </li>\n  <li class=\"nav-item\" role=\"presentation\">\n    <a class=\"nav-link\" href=\"data-med.html\">\n      <i class=\"bi bi-database-fill\"></i>\n      16S rRNA MED processing\n    </a>\n  </li>\n  <li class=\"nav-item\" role=\"presentation\">\n    <a class=\"nav-link\" href=\"data-mg.html\">\n      <i class=\"bi bi-database-fill\"></i>\n      Metagenomic processing\n    </a>\n  </li>\n</ul>\n\n<script type=\"text/javascript\">\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n  // get file name\n  const filename = window.location.pathname.split(\"/\").slice(-1)[0];\n\n  // latch active\n  const toolLinks = window.document.querySelectorAll(\"#index-chooser a\");\n  for (const tool of toolLinks) {\n    if (filename && filename !== \"index.html\") {\n      if (tool.href.endsWith(filename)) {\n        tool.classList.add(\"active\");\n      } \n    } else {\n      if (tool.href.endsWith(\"listing-filters.html\")) {\n        tool.classList.add(\"active\");\n      }\n    }\n  }\n  \n  // move heading into table\n  document.querySelector(\".listing-actions-group\").prepend(document.querySelector(\"h3.unlisted\"));\n});\n\n</script>\n```\n\n:::\n\n\n\n\n\n<br/>\n\n## Metagenomic Data and Scripts {.unlisted}\n\n::: {#mg-listing .column-body-outset-right}\n:::\n\n## Metagenomic Processing\n\nFor metagenomic analysis we used the [anviâ€™o](https://anvio.org/) platform, which brings together many aspects of *cutting-edge computational strategies of data-enabled microbiology, including genomics, metagenomics, metatranscriptomics, pangenomics, metapangenomics, phylogenomics, and microbial population genetics in an integrated and easy-to-use fashion through extensive interactive visualization capabilities*. It is basically heavy metal. \n\nHere we run the anvi'o [metagenomic workflow](https://anvio.org/help/main/workflows/metagenomics/). For this pipeline we need the following:\n\nA. JSON-formatted config file, which we can get by running the following:\n\n\n\n::: {.cell}\n\n```{.zsh .cell-code}\nanvi-run-workflow -w metagenomics --get-default-config default_mg.json\n```\n:::\n\n\n\nB. Modify the file to suite your needs. Here is our final config file. \n\n\n\n::: {.cell}\n\n```{.bash .cell-code  code-fold=\"true\" code-summary=\"json formatted config file for anvi'o metagenomic workflow.\"}\n{\n    \"fasta_txt\": \"\",\n    \"anvi_gen_contigs_database\": {\n        \"--project-name\": \"{group}\",\n        \"--description\": \"\",\n        \"--skip-gene-calling\": \"\",\n        \"--ignore-internal-stop-codons\": \"\",\n        \"--skip-mindful-splitting\": \"\",\n        \"--contigs-fasta\": \"\",\n        \"--split-length\": \"\",\n        \"--kmer-size\": \"\",\n        \"--skip-predict-frame\": \"\",\n        \"--prodigal-translation-table\": \"\",\n        \"threads\": 14\n    },\n    \"centrifuge\": {\n        \"threads\": 14,\n        \"run\": true,\n        \"db\": \"/pool/genomics/stri_istmobiome/dbs/centrifuge_dbs/p+h+v\"\n    },\n    \"anvi_run_hmms\": {\n        \"run\": true,\n        \"threads\": 14,\n        \"--also-scan-trnas\": true,\n        \"--installed-hmm-profile\": \"\",\n        \"--hmm-profile-dir\": \"\",\n        \"--add-to-functions-table\": \"\"\n    },\n    \"anvi_run_kegg_kofams\": {\n        \"run\": true,\n        \"threads\": 14,\n        \"--kegg-data-dir\": \"/pool/genomics/stri_istmobiome/dbs/kegg_kofam/\",\n        \"--hmmer-program\": \"\",\n        \"--keep-all-hits\": \"\",\n        \"--log-bitscores\": \"\",\n        \"--just-do-it\": \"\"\n    },\n    \"anvi_run_ncbi_cogs\": {\n        \"run\": true,\n        \"threads\": 14,\n        \"--cog-data-dir\": \"/pool/genomics/stri_istmobiome/dbs/cog_db/\",\n        \"--temporary-dir-path\": \"/pool/genomics/stri_istmobiome/dbs/cog_db/tmp_mega/\",\n        \"--search-with\": \"\"\n    },\n    \"anvi_run_scg_taxonomy\": {\n        \"run\": true,\n        \"threads\": 14,\n        \"--scgs-taxonomy-data-dir\": \"\"\n    },\n    \"anvi_run_trna_scan\": {\n        \"run\": true,\n        \"threads\": 14,\n        \"--trna-cutoff-score\": \"\"\n    },\n    \"anvi_script_reformat_fasta\": {\n        \"run\": true,\n        \"--prefix\": \"{group}\",\n        \"--simplify-names\": true,\n        \"--keep-ids\": \"\",\n        \"--exclude-ids\": \"\",\n        \"--min-len\": \"1000\",\n        \"--seq-type\": \"\",\n        \"threads\": 7\n    },\n    \"emapper\": {\n        \"--database\": \"bact\",\n        \"--usemem\": true,\n        \"--override\": true,\n        \"path_to_emapper_dir\": \"\",\n        \"threads\": \"\"\n    },\n    \"anvi_script_run_eggnog_mapper\": {\n        \"--use-version\": \"0.12.6\",\n        \"run\": \"\",\n        \"--cog-data-dir\": \"\",\n        \"--drop-previous-annotations\": \"\",\n        \"threads\": \"\"\n    },\n    \"samples_txt\": \"samples.txt\",\n    \"metaspades\": {\n        \"additional_params\": \"--only-assembler\",\n        \"threads\": 7,\n        \"run\": \"\",\n        \"use_scaffolds\": \"\"\n    },\n    \"megahit\": {\n        \"--min-contig-len\": 1000,\n        \"--memory\": 0.9,\n        \"threads\": 14,\n        \"run\": true,\n        \"--min-count\": \"\",\n        \"--k-min\": \"\",\n        \"--k-max\": \"\",\n        \"--k-step\": \"\",\n        \"--k-list\": \"\",\n        \"--no-mercy\": \"\",\n        \"--no-bubble\": \"\",\n        \"--merge-level\": \"\",\n        \"--prune-level\": \"\",\n        \"--prune-depth\": \"\",\n        \"--low-local-ratio\": \"\",\n        \"--max-tip-len\": \"\",\n        \"--no-local\": \"\",\n        \"--kmin-1pass\": \"\",\n        \"--presets\": \"meta-sensitive\",\n        \"--mem-flag\": \"\",\n        \"--use-gpu\": \"\",\n        \"--gpu-mem\": \"\",\n        \"--keep-tmp-files\": \"\",\n        \"--tmp-dir\": \"\",\n        \"--continue\": true,\n        \"--verbose\": \"\"\n    },\n    \"idba_ud\": {\n        \"--min_contig\": 1000,\n        \"threads\": 7,\n        \"run\": \"\",\n        \"--mink\": \"\",\n        \"--maxk\": \"\",\n        \"--step\": \"\",\n        \"--inner_mink\": \"\",\n        \"--inner_step\": \"\",\n        \"--prefix\": \"\",\n        \"--min_count\": \"\",\n        \"--min_support\": \"\",\n        \"--seed_kmer\": \"\",\n        \"--similar\": \"\",\n        \"--max_mismatch\": \"\",\n        \"--min_pairs\": \"\",\n        \"--no_bubble\": \"\",\n        \"--no_local\": \"\",\n        \"--no_coverage\": \"\",\n        \"--no_correct\": \"\",\n        \"--pre_correction\": \"\",\n        \"use_scaffolds\": \"\"\n    },\n    \"iu_filter_quality_minoche\": {\n        \"run\": true,\n        \"--ignore-deflines\": true,\n        \"--visualize-quality-curves\": \"\",\n        \"--limit-num-pairs\": \"\",\n        \"--print-qual-scores\": \"\",\n        \"--store-read-fate\": \"\",\n        \"threads\": 7\n    },\n    \"gzip_fastqs\": {\n        \"run\": true,\n        \"threads\": 7\n    },\n    \"bowtie\": {\n        \"additional_params\": \"--no-unal\",\n        \"threads\": 7\n    },\n    \"samtools_view\": {\n        \"additional_params\": \"-F 4\",\n        \"threads\": 7\n    },\n    \"anvi_profile\": {\n        \"threads\": 7,\n        \"--sample-name\": \"{sample}\",\n        \"--overwrite-output-destinations\": true,\n        \"--report-variability-full\": \"\",\n        \"--skip-SNV-profiling\": \"\",\n        \"--profile-SCVs\": true,\n        \"--description\": \"\",\n        \"--skip-hierarchical-clustering\": \"\",\n        \"--distance\": \"\",\n        \"--linkage\": \"\",\n        \"--min-contig-length\": \"\",\n        \"--min-mean-coverage\": \"\",\n        \"--min-coverage-for-variability\": \"\",\n        \"--cluster-contigs\": \"\",\n        \"--contigs-of-interest\": \"\",\n        \"--queue-size\": \"\",\n        \"--write-buffer-size-per-thread\": \"\",\n        \"--fetch-filter\": \"\",\n        \"--min-percent-identity\": \"\",\n        \"--max-contig-length\": \"\"\n    },\n    \"anvi_merge\": {\n        \"--sample-name\": \"{group}\",\n        \"--overwrite-output-destinations\": true,\n        \"--description\": \"\",\n        \"--skip-hierarchical-clustering\": \"\",\n        \"--enforce-hierarchical-clustering\": \"\",\n        \"--distance\": \"\",\n        \"--linkage\": \"\",\n        \"threads\": 14\n    },\n    \"import_percent_of_reads_mapped\": {\n        \"run\": true,\n        \"threads\": 7\n    },\n    \"krakenuniq\": {\n        \"threads\": 3,\n        \"--gzip-compressed\": true,\n        \"additional_params\": \"\",\n        \"run\": \"\",\n        \"--db\": \"\"\n    },\n    \"remove_short_reads_based_on_references\": {\n        \"delimiter-for-iu-remove-ids-from-fastq\": \" \",\n        \"dont_remove_just_map\": \"\",\n        \"references_for_removal_txt\": \"\",\n        \"threads\": \"\"\n    },\n    \"anvi_cluster_contigs\": {\n        \"--collection-name\": \"{driver}\",\n        \"run\": \"\",\n        \"--driver\": \"\",\n        \"--just-do-it\": \"\",\n        \"--additional-params-concoct\": \"\",\n        \"--additional-params-metabat2\": \"\",\n        \"--additional-params-maxbin2\": \"\",\n        \"--additional-params-dastool\": \"\",\n        \"--additional-params-binsanity\": \"\",\n        \"threads\": \"\"\n    },\n    \"gen_external_genome_file\": {\n        \"threads\": \"\"\n    },\n    \"export_gene_calls_for_centrifuge\": {\n        \"threads\": \"\"\n    },\n    \"anvi_import_taxonomy_for_genes\": {\n        \"threads\": \"\"\n    },\n    \"annotate_contigs_database\": {\n        \"threads\": \"\"\n    },\n    \"anvi_get_sequences_for_gene_calls\": {\n        \"threads\": \"\"\n    },\n    \"gunzip_fasta\": {\n        \"threads\": \"\"\n    },\n    \"reformat_external_gene_calls_table\": {\n        \"threads\": \"\"\n    },\n    \"reformat_external_functions\": {\n        \"threads\": \"\"\n    },\n    \"import_external_functions\": {\n        \"threads\": \"\"\n    },\n    \"anvi_run_pfams\": {\n        \"run\": true,\n        \"--pfam-data-dir\": \"/pool/genomics/stri_istmobiome/dbs/pfam_db\",\n        \"threads\": 14\n    },\n    \"iu_gen_configs\": {\n        \"--r1-prefix\": \"\",\n        \"--r2-prefix\": \"\",\n        \"threads\": 14\n    },\n    \"gen_qc_report\": {\n        \"threads\": \"\"\n    },\n    \"merge_fastqs_for_co_assembly\": {\n        \"threads\": \"\"\n    },\n    \"merge_fastas_for_co_assembly\": {\n        \"threads\": \"\"\n    },\n    \"bowtie_build\": {\n        \"additional_params\": \"\",\n        \"threads\": \"\"\n    },\n    \"anvi_init_bam\": {\n        \"threads\": \"\"\n    },\n    \"krakenuniq_mpa_report\": {\n        \"threads\": \"\"\n    },\n    \"import_krakenuniq_taxonomy\": {\n        \"--min-abundance\": \"\",\n        \"threads\": \"\"\n    },\n    \"anvi_summarize\": {\n        \"additional_params\": \"\",\n        \"run\": \"\",\n        \"threads\": \"\"\n    },\n    \"anvi_split\": {\n        \"additional_params\": \"\",\n        \"run\": \"\",\n        \"threads\": \"\"\n    },\n    \"references_mode\": \"\",\n    \"all_against_all\": \"\",\n    \"kraken_txt\": \"\",\n    \"collections_txt\": \"\",\n    \"output_dirs\": {\n        \"FASTA_DIR\": \"02_FASTA\",\n        \"CONTIGS_DIR\": \"03_CONTIGS\",\n        \"QC_DIR\": \"01_QC\",\n        \"MAPPING_DIR\": \"04_MAPPING\",\n        \"PROFILE_DIR\": \"05_ANVIO_PROFILE\",\n        \"MERGE_DIR\": \"06_MERGED\",\n        \"TAXONOMY_DIR\": \"07_TAXONOMY\",\n        \"SUMMARY_DIR\": \"08_SUMMARY\",\n        \"SPLIT_PROFILES_DIR\": \"09_SPLIT_PROFILES\",\n        \"LOGS_DIR\": \"00_LOGS\"\n    },\n    \"max_threads\": \"\",\n    \"config_version\": \"3\",\n    \"workflow_name\": \"metagenomics\"\n}\n\n```\n:::\n\n\n\nC. A four-column tab-delimited text file where each row is a sample. The column headers are as follows:\n\n   i. `sample`: the sample name\n   ii. `group`: group for co-assembly\n   iii. `r1`: sample forward reads \n   iv. `r2`: sample reverse reads\n   \nAnd here is a little mock example. The file we used (`samples.txt`) is linked in the table above. \n\n```\nsample\tgroup\tr1\tr2\nEP_ALPH_AREN_GL_P01\tEP\t/path/to/files/sample-1_R1_001.fastq.gz\t/path/to/files/sample-1_R2_001.fastq.gz\nEP_ALPH_AREN_HP_P01\tEP\t/path/to/files/sample-2_R1_001.fastq.gz\t/path/to/files/sample-2_R2_001.fastq.gz\nWA_ALPH_WEBS_HP_P01\tWA\t/path/to/files/sample_3_R1_001.fastq.gz\t/path/to/files/sample-3_R2_001.fastq.gz\nWA_ALPH_WEBS_MG_P01\tWA\t/path/to/files/sample-4_R1_001.fastq.gz\t/path/to/files/sample-4_R2_001.fastq.gz\n```\n\nD. And of course a bunch of fastq files (linked in the table above). \n\nOnce all of these pieces are in place, let er rip by running this command:\n\n\n\n::: {.cell}\n\n```{.zsh .cell-code}\nanvi-run-workflow --workflow metagenomics \\\n                  --get-default-config default_mg.json  \\\n                  --list-dependencies\n```\n:::\n\n\n\nThe entire pipeline can take several days to run depending on the size and complexity of your dataset. \n\nIn the resources listed above, we include a table that summarizes the initial QC screening for each sample.\n\n\n\n::: {.column-body-outset-right}\n\n\n\n:::\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}